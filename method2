kind: StatefulSet
apiVersion: apps/v1
metadata:
  annotations:
    meta.helm.sh/release-name: mongo
    meta.helm.sh/release-namespace: mongo-test
  selfLink: /apis/apps/v1/namespaces/mongo-test/statefulsets/mongo-mongodb
  resourceVersion: '4412116'
  name: mongo-mongodb
  uid: ddba71fc-4e72-4656-bbd5-638dba9d6821
  creationTimestamp: '2023-02-24T11:43:49Z'
  generation: 1
  namespace: mongo-test
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.3
spec:
  replicas: 2
  securityContext:
    fsGroup: 1001
    runAsUser: 1001
    supplementalGroups: [1001]
  selector:
    matchLabels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/name: mongodb
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: mongo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-10.31.3
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      restartPolicy: Always
      serviceAccountName: mongo-mongodb
      imagePullSecrets:
        - name: images-secret
        - name: images-secret
      schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: mongodb
                    app.kubernetes.io/instance: mongo
                    app.kubernetes.io/name: mongodb
                namespaces:
                  - mongo-test
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      containers:
        - resources:
            limits:
              cpu: 1500m
              memory: 3Gi
            requests:
              cpu: '1'
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          name: mongodb
          command:
            - /scripts/setup.sh
          livenessProbe:
            exec:
              command:
                - mongo
                - '--disableImplicitSessions'
                - '--eval'
                - db.adminCommand('ping')
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: HELM_UPGRADE
              value: one
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MY_POD_HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: K8S_SERVICE_NAME
              value: mongo-mongodb-headless
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: >-
                mongo-mongodb-0.$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: MONGODB_REPLICA_SET_NAME
              value: rs0
            - name: MONGODB_ROOT_USER
              value: root
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-mongodb
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongo-mongodb
                  key: mongodb-replica-set-key
            - name: ALLOW_EMPTY_PASSWORD
              value: 'no'
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: '0'
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: 'no'
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: 'no'
            - name: MONGODB_ENABLE_JOURNAL
              value: 'yes'
            - name: MONGODB_ENABLE_IPV6
              value: 'no'
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: 'no'
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
            - name: scripts
              mountPath: /scripts/setup.sh
              subPath: setup.sh
          terminationMessagePolicy: File
          image: 'abilitylite.azurecr.io/ability_lite_oss/mongodb:4.4.11-debian-10-r12'
      serviceAccount: mongo-mongodb
      volumes:
        - name: scripts
          configMap:
            name: mongo-mongodb-scripts
            defaultMode: 493
      dnsPolicy: ClusterFirst
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: datadir
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: mongo-mongodb-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
status:
  replicas: 0
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
mongodb_arbiter_statefulset.yml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  annotations:
    meta.helm.sh/release-name: mongo
    meta.helm.sh/release-namespace: mongo-test
  selfLink: /apis/apps/v1/namespaces/mongo-test/statefulsets/mongo-mongodb-arbiter
  resourceVersion: '5581498'
  name: mongo-mongodb-arbiter
  uid: 24851954-e8c1-419d-aaea-487e65d167ce
  creationTimestamp: '2023-02-26T18:34:07Z'
  generation: 1
  namespace: mongo-test
  labels:
    app.kubernetes.io/component: arbiter
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.31.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: arbiter
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/name: mongodb
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: arbiter
        app.kubernetes.io/instance: mongo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-10.31.3
    spec:
      restartPolicy: Always
      serviceAccountName: mongo-mongodb
      imagePullSecrets:
        - name: images-secret
        - name: images-secret
      schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: arbiter
                    app.kubernetes.io/instance: mongo
                    app.kubernetes.io/name: mongodb
                namespaces:
                  - mongo-test
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1001
      containers:
        - resources:
            limits:
              cpu: 1500m
              memory: 3Gi
            requests:
              cpu: '1'
              memory: 2Gi
          readinessProbe:
            tcpSocket:
              port: mongodb
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          name: mongodb-arbiter
          livenessProbe:
            tcpSocket:
              port: mongodb
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: HELM_UPGRADE
              value: one
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: mongo-mongodb-arbiter-headless
            - name: MONGODB_REPLICA_SET_MODE
              value: arbiter
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: >-
                mongo-mongodb-0.mongo-mongodb-headless.$(MY_POD_NAMESPACE).svc.cluster.local
            - name: MONGODB_REPLICA_SET_NAME
              value: rs0
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: >-
                $(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: MONGODB_INITIAL_PRIMARY_ROOT_USER
              value: root
            - name: MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-mongodb
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongo-mongodb
                  key: mongodb-replica-set-key
            - name: ALLOW_EMPTY_PASSWORD
              value: 'no'
          securityContext:
            runAsUser: 1001
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: 'abilitylite.azurecr.io/ability_lite_oss/mongodb:4.4.11-debian-10-r12'
      serviceAccount: mongo-mongodb
      dnsPolicy: ClusterFirst
  serviceName: mongo-mongodb-arbiter-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
status:
  replicas: 0
